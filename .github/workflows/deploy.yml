name: CI/CD Pipeline

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      docker:
        image: docker:19.03.12
        options: --privileged

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build Docker image for tests
        run: docker build -t migzxc23/react-test -f ./client/Dockerfile.dev ./client

      - name: Run tests
        run: docker run -e CI=true migzxc23/react-test npm test

      - name: Build Docker images
        run: |
          docker build -t migzxc23/multi-client ./client
          docker build -t migzxc23/multi-nginx ./nginx
          docker build -t migzxc23/multi-server ./server
          docker build -t migzxc23/multi-worker ./worker

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Push Docker images
        run: |
          docker push migzxc23/multi-client
          docker push migzxc23/multi-nginx
          docker push migzxc23/multi-server
          docker push migzxc23/multi-worker

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Zip deployment files
        run: zip -r deployment.zip Dockerrun.aws.json

      - name: Deploy to Elastic Beanstalk
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_KEY }}
          GITHUB_SHA: ${{ github.sha }}
        run: |
          aws configure set default.region ap-southeast-2
          aws s3 cp deployment.zip s3://elasticbeanstalk-ap-southeast-2-767397956932/docker-multi/deployment.zip
          echo "Deployment zip file uploaded to S3."
          aws s3 ls s3://elasticbeanstalk-ap-southeast-2-767397956932/docker-multi/deployment.zip
          aws elasticbeanstalk create-application-version --application-name multi-docker --version-label '${GITHUB_SHA}' --source-bundle S3Bucket=elasticbeanstalk-ap-southeast-2-767397956932,S3Key=docker-multi/deployment.zip
          echo "Created application version ${ GITHUB_SHA }."
          aws elasticbeanstalk update-environment --environment-name Multi-docker-env --version-label '${GITHUB_SHA}'
          echo "Updated environment Multi-docker-env to version ${ GITHUB_SHA }."
          aws elasticbeanstalk describe-environments --environment-names Multi-docker-env --query "Environments[0].Status"
